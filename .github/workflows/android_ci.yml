# .github/workflows/android_ci.yml
# This workflow builds the Android APK only when frontend code changes.

name: Build Android APK on Frontend Change

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
      - '.github/workflows/android_ci.yml' # Also trigger on changes to this workflow file itself
  workflow_dispatch: # Allows manual triggering from the Actions tab

jobs:
  build-android-apk:
    runs-on: ubuntu-latest
    steps:
      - name: 1. Checkout repository
        uses: actions/checkout@v3

      - name: 2. Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: 3. Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: 4. Build Frontend Application
        run: |
          echo "Building frontend..."
          cd frontend
          npm install
          npm run build

      - name: 5. Copy Frontend to Android Assets
        run: |
          echo "Copying frontend build to Android assets..."
          rm -rf android/app/src/main/assets/*
          mkdir -p android/app/src/main/assets
          cp -r frontend/build/* android/app/src/main/assets/

      - name: 6. Make gradlew executable
        run: chmod +x android/gradlew

      - name: 7. Build Android APK
        run: |
          echo "Building APK..."
          cd android
          ./gradlew assembleDebug

      - name: 8. Upload APK as Artifact
        # Corrected: Updated from deprecated v3 to v4
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: android/app/build/outputs/apk/debug/app-debug.apk

#!/bin/bash

# Determine the Java command to use to run the JVM.
if [ -n "$JAVA_HOME" ] ; then
    JAVA_CMD="$JAVA_HOME/bin/java"
else
    JAVA_CMD="java"
fi

# Determine the script directory.
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

# Set the GRADLE_USER_HOME if not already set
if [ -z "$GRADLE_USER_HOME" ] ; then
    GRADLE_USER_HOME="$SCRIPT_DIR/.gradle"
    mkdir -p "$GRADLE_USER_HOME"
fi

# Set the default Gradle version if not set
DEFAULT_GRADLE_VERSION=7.6.1 # Replace with your desired Gradle version
if [ -z "$GRADLE_VERSION" ] ; then
    GRADLE_VERSION="$DEFAULT_GRADLE_VERSION"
fi

GRADLE_DISTRIBUTION_URL="https://services.gradle.org/distributions/gradle-$GRADLE_VERSION-bin.zip"
GRADLE_INSTALL_DIR="$GRADLE_USER_HOME/wrapper/dists/gradle-$GRADLE_VERSION-bin"
GRADLE_ZIP_FILE="$GRADLE_USER_HOME/wrapper/dists/gradle-$GRADLE_VERSION-bin.zip"

# Check if Gradle is already installed
if [ ! -f "$GRADLE_INSTALL_DIR/gradle-$GRADLE_VERSION/bin/gradle" ]; then
    echo "Downloading Gradle $GRADLE_VERSION..."
    mkdir -p "$(dirname "$GRADLE_ZIP_FILE")"
    if command -v curl &> /dev/null; then
        curl -L "$GRADLE_DISTRIBUTION_URL" -o "$GRADLE_ZIP_FILE"
    elif command -v wget &> /dev/null; then
        wget "$GRADLE_DISTRIBUTION_URL" -O "$GRADLE_ZIP_FILE"
    else
        echo "Error: Neither curl nor wget found. Cannot download Gradle."
        exit 1
    fi

    echo "Extracting Gradle $GRADLE_VERSION..."
    mkdir -p "$GRADLE_INSTALL_DIR"
    if command -v unzip &> /dev/null; then
        unzip -q "$GRADLE_ZIP_FILE" -d "$GRADLE_INSTALL_DIR"
    else
        echo "Error: unzip command not found. Cannot extract Gradle distribution."
        exit 1
    fi
    rm "$GRADLE_ZIP_FILE"
fi

# Set the GRADLE_HOME for the execution
export GRADLE_HOME="$GRADLE_INSTALL_DIR/gradle-$GRADLE_VERSION"

# Execute Gradle
"$GRADLE_HOME/bin/gradle" "$@"
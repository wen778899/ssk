#!/usr/bin/env sh

#
# Copyright 2015 the original author or authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

##############################################################################
#
#   Gradle start up script for UN*X
#
##############################################################################

# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass any JVM options to this script.
DEFAULT_JVM_OPTS=""

APP_NAME="Gradle"
APP_BASE_NAME=`basename "$0"`

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD="maximum"

# OS specific support (must be 'true' or 'false').
cygwin=false
msys=false
darwin=false
nonstop=false
case "`uname`" in
  CYGWIN* )
    cygwin=true
    ;;
  Darwin* )
    darwin=true
    ;;
  MINGW* )
    msys=true
    ;;
  NONSTOP* )
    nonstop=true
    ;;
esac

# For Cygwin, ensure paths are in UNIX format before anything is touched
if $cygwin ; then
    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
fi

# Attempt to find java
if [ -z "$JAVA_HOME" ] ; then
    if $darwin ; then
        if [ -x '/usr/libexec/java_home' ] ; then
            JAVA_HOME=`/usr/libexec/java_home`
        elif [ -d "/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home" ]; then
            JAVA_HOME="/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home"
        fi
    else
        JAVA_PATH=`which java 2>/dev/null`
        if [ -n "$JAVA_PATH" ] ; then
            JAVA_PATH=`readlink -f "$JAVA_PATH" 2>/dev/null`
            if [ -n "$JAVA_PATH" ] ; then
                JAVA_HOME=`dirname "$JAVA_PATH" 2>/dev/null`
                JAVA_HOME=`dirname "$JAVA_HOME" 2>/dev/null`
            fi
        fi
    fi
    if [ -z "$JAVA_HOME" ] ; then
        # If all else fails, look for a JRE
        if [ -d "$APP_HOME/jre" ] ; then
            JAVA_HOME="$APP_HOME/jre"
        fi
    fi
fi
if [ -z "$JAVA_HOME" ] ; then
    echo "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH." >&2
    echo >&2
    echo "Please set the JAVA_HOME variable in your environment to match the" >&2
    echo "location of your Java installation." >&2
    exit 1
fi

# Set a few of the JRE locations
if [ -d "$JAVA_HOME/lib/tools.jar" -a -f "$JAVA_HOME/lib/tools.jar" ] ; then
    # Found JDK
    JAVACMD="$JAVA_HOME/bin/java"
elif [ -d "$JAVA_HOME/jre/lib/rt.jar" -a -f "$JAVA_HOME/jre/lib/rt.jar" ] ; then
    # Found JRE
    JAVACMD="$JAVA_HOME/jre/bin/java"
else
    # Could not find java in a recognizable location. Let's just try to use what we've got.
    JAVACMD="$JAVA_HOME/bin/java"
fi

if [ ! -x "$JAVACMD" ] ; then
    echo "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME" >&2
    echo >&2
    echo "Please set the JAVA_HOME variable in your environment to match the" >&2
    echo "location of your Java installation." >&2
    exit 1
fi

# Resolve links: $0 may be a link
PRG="$0"
# Need this for relative symlinks.
while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG=`dirname "$PRG"`"/$link"
    fi
done
SAVED="`pwd`"
cd "`dirname "$PRG"`/" >/dev/null
APP_HOME="`pwd -P`"
cd "$SAVED" >/dev/null

CLASSPATH="$APP_HOME/gradle/wrapper/gradle-wrapper.jar"

# Split up the JVM options string.
JVM_OPTS=
for opt in $DEFAULT_JVM_OPTS; do
    JVM_OPTS="$JVM_OPTS $opt"
done

# Add the command line options to the list of options
#
JVM_OPTS="$JVM_OPTS $JAVA_OPTS $GRADLE_OPTS"

# Set the application arguments
#
if [ -n "$APP_ARGS" ] ; then
    APP_ARGS="$APP_ARGS $@"
else
    APP_ARGS="$@"
fi

# Execute the application
#
exec "$JAVACMD" $JVM_OPTS -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$APP_ARGS"
